/*
*
* Contains all mixins for the scss
*
*
*/


@mixin root-vars {
  :root {
    @include default-font;
    @each $name, $hex in $colors {
      // Call the mixin with the hexadecimal value of each color
      --#{$name}-color: #{$hex};
    }
    @each $color, $hex in $colors {
      --#{$color}: #{red($hex)}, #{green($hex)}, #{blue($hex)};
    }
    @each $header, $font-size in $header-font-sizes {
      --#{$header}-font-size: #{$font-size};
    }
    @each $size, $value in $font-sizes {
      --text-#{$size}: #{$value};
    }
  }

  @each $color, $hex in $colors {
    .#{$color}-color {
      color: rgb(var(--#{$color}));
    }
  }

  @each $color, $hex in $colors {
    .#{$color}-bg {
      background-color: rgb(var(--#{$color}));
    }
  }

  $start: 10;
  $end: 200;
  $step: 2;

  @for $i from $start through $end {
    .w-#{$i} {
      @include size(width, $i + px);
    }
    .h-#{$i} {
      @include size(height, $i + px);
    }
    $start: $start * $step;
  }
}

@mixin size($dimension, $size) {
  #{$dimension}: $size;
}

@mixin header-style($size) {
  font-size: map-get($header-font-sizes, $size) !important;
  font-weight: 600 !important;
}

@mixin default-font {
  --default-font-family: poppins, sans-serif !important;
}

@mixin hex-to-rgb($hex) {
  $red: 0;
  $green: 0;
  $blue: 0;
  
  @if (length($hex) == 6) {
    $red:   red($hex);
    $green: green($hex);
    $blue:  blue($hex);
  }
  
  cl-red: $red;
  cl-green: $green;
  cl-blue: $blue;
}

// Loop through the map of colors

@mixin img-widths($start, $increment: 2) {
  $i: $start;
  @while $i <= 200 {
    .img-#{$i} {
      img{
        width: #{$i}px !important;
        height: #{$i}px !important;
      }
    }
    $i: $i + $increment;
  }
}

@mixin cta-style($bg-color, $text-color) {
  background-color: $bg-color !important;
  color: $text-color !important;
  padding: 10px 20px;
  border-radius: 0;
  text-transform: uppercase;
  font-weight: 500;
  letter-spacing: 1px;
  display: inline-block;
  border: 1px solid $bg-color !important;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  &:hover{
    background-color: $text-color !important;
    color: $bg-color !important;
    border: 1px solid $text-color !important;
  }
}
